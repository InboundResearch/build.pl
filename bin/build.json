{
    "values": {
        "sourcePath": ".",
        "testPattern": "(?<=^|\\/)test-.+",
        "resourcesPath": "resources",
        "buildPath": "target",
        "objectsPath": "objects",
        "sourceExtension": ".cpp",
        "objectExtension": ".o",
        "dependencyExtension": ".d",
        "target": "*",
        "dependencies": [],
        "type": "application",
        "configuration": "debug",
        "verbose": 1,
        "sourceFullPath": "$(echo \"$sourcePath\" | sed 's/\\([^,][^,]*\\)/\\1\\/'\"$target\"'/g')",
        "resourcesFullPath": "$sourceFullPath/$resourcesPath",
        "outputPath": "$buildPath/$target/$configuration",
        "objectsFullPath": "$outputPath/$objectsPath",
        "sourceFile": "$sourceFullPath/$sourceBase$sourceExtension",
        "dependencyFile": "$objectsFullPath/$sourceBase$dependencyExtension",
        "objectFile": "$objectsFullPath/$sourceBase$objectExtension",
        "compiler": "$(find /usr/local/bin /usr/bin | grep -P \"bin\\/g\\+\\+[^\\/]*\" | head -n 1)",
        "depender": "$compiler",
        "linker": "$compiler"
    },
    "configurations": {
        "debug": {
            "compilerOptions": "-std=c++11 -Wall -Wno-psabi -g -D_DEBUG_",
            "linkerOptions": ""
        },
        "release": {
            "compilerOptions": "-std=c++11 -Wall -Wno-psabi -O3 -D_NDEBUG_",
            "linkerOptions": ""
        }
    },
    "types": {
        "application": {
            "compilerOptions": "$compilerOptions -c $sourceFile -I$sourcePath $includes -o $objectFile",
            "dependerOptions": "$compilerOptions -MM $sourceFile $includes > $dependencyFile",
            "linkerOptions": "-o $outputFile $objectsFullPath/*$objectExtension -L$outputPath $libraries $linkerOptions",
            "outputFile": "$outputPath/$target",
            "copyDependencies": 1
        },
        "sharedLibrary": {
            "toInclude": "-I$sourceFullPath",
            "compilerOptions": "$compilerOptions -fPIC -c $sourceFile -I$sourcePath $includes -o $objectFile",
            "dependerOptions": "$compilerOptions -MM $sourceFile $includes > $dependencyFile",
            "linkerOptions": "-shared -o $outputFile $objectsFullPath/*$objectExtension -L$outputPath $libraries $linkerOptions",
            "linkTo": "-l$target",
            "outputFile": "$outputPath/lib$target.so",
            "copyDependencies": 1
        },
        "staticLibrary": {
            "toInclude": "-I$sourceFullPath",
            "compilerOptions": "$compilerOptions -c $sourceFile -I$sourcePath $includes -o $objectFile",
            "dependerOptions": "$compilerOptions -MM $sourceFile $includes > $dependencyFile",
            "linker": "$(find /usr/local/bin /usr/bin | grep -P \"\\/ar$\" | head -n 1)",
            "linkerOptions": "rcs $outputFile $objectsFullPath/*$objectExtension $linkerOptions",
            "linkTo": "-L$outputPath -l$target",
            "outputFile": "$outputPath/lib$target.a",
            "copyDependencies": 0
        },
        "noLink": {
            "toInclude": "-I$sourceFullPath",
            "compilerOptions": "$compilerOptions -c $sourceFile -I$sourcePath $includes -o $objectFile",
            "dependerOptions": "$compilerOptions -MM $sourceFile $includes > $dependencyFile",
            "linker": "no-op",
            "linkerOptions": "$outputFile",
            "linkTo": "",
            "outputFile": "$target",
            "copyDependencies": 0
        }
    },
    "tools": {
        "pull": "git pull",
        "push": "git add --all . && git commit && git push",
        "deploy": "",
        "clean": "rm -rf $buildPath",
        "cloc": "wc -l `find $sourcePath -name '*.[hc]*'`",
        "defines": "echo | $compiler -dM -E -",
        "refresh-build": "pushd $(dirname `which build`) > /dev/null; git pull > /dev/null; cat change-log.txt; popd > /dev/null",
        "help": "pushd $(dirname `which build`) > /dev/null; less build-help.txt; popd > /dev/null"
    }
}
